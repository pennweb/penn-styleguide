{"version":3,"file":"twig-renderer.mjs.js","sources":["../src/utils.js","../src/twig-renderer.js"],"sourcesContent":["import { join, relative } from 'path';\nimport fs from 'fs-extra';\n\n/**\n * Formats Schema validation errors for using with `console.error`\n * @param {Array} errors - Error to format\n * @returns {string} - Errors to show\n */\nexport function formatSchemaErrors(errors) {\n  if (errors.length === 0) return '';\n  const msgs = errors.map((e) => {\n    switch (e.keyword) {\n      case 'type':\n        return `Prop '${e.dataPath}' ${e.message}`;\n      case 'additionalProperties':\n        return `${e.message}: '${\n          e.params.additionalProperty\n        }' - add this to schema or remove`;\n      case 'enum':\n        return `Prop '${e.dataPath}' ${\n          e.message\n        }: ${e.params.allowedValues.join(', ')}`;\n      default:\n        return e.message;\n    }\n  }).map(error => `ðŸ›‘ ${error}`);\n  return msgs.join('\\n');\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n * @param {int} min - Lowest number\n * @param {int} max - Highest number\n * @returns {int} - A random number between the two\n */\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Is this path a directory?\n * @param {string} thePath - Path to check\n * @returns {boolean} - is it a directory?\n */\nexport const isDir = thePath => fs.statSync(thePath).isDirectory();\n\nfunction getAllSubFolders(dir) {\n  return fs.readdirSync(dir).reduce((files, file) => {\n    // if (file === 'node_modules') return [...files];\n    const name = join(dir, file);\n    return isDir(name) ? [...files, name, ...getAllSubFolders(name)] : [...files];\n  }, []);\n}\n\n/**\n * Find all files inside a dir, recursively.\n * Synchronous b/c this is used in constructor, which cannot be async.\n * @param {string} dir - Dir path string.\n * @param {string} relativeFrom - path it should be relative from. If not, returns absolute paths.\n * @return {string[]} - Array with all directory names that are inside the directory.\n */\nexport function getAllFolders(dir, relativeFrom = '') {\n  if (!isDir(dir)) {\n    console.error(`This path is not a directory: ${dir}`);\n  }\n  const folders = [dir, ...getAllSubFolders(dir)];\n  return relativeFrom ? folders.map(folder => relative(relativeFrom, folder)) : folders;\n}\n","import path from 'path';\nimport qs from 'querystring';\nimport fetch from 'node-fetch';\nimport sleep from 'sleep-promise';\nimport fs from 'fs-extra';\nimport execa from 'execa';\nimport getPort from 'get-port';\nimport Ajv from 'ajv';\nimport { formatSchemaErrors, getAllFolders } from './utils';\nimport configSchema from '../config.schema.json';\n\nconst ajv = new Ajv({\n  useDefaults: true,\n});\n\nconst validateSchemaAndAssignDefaults = ajv.compile(configSchema);\n\nconst serverStates = Object.freeze({\n  STOPPED: 'STOPPED',\n  STARTING: 'STARTING',\n  READY: 'READY',\n  STOPPING: 'STOPPING',\n});\n\nclass TwigRenderer {\n  /**\n   * @param {TwigRendererConfig} userConfig - User config\n   */\n  constructor(userConfig) {\n    try {\n      execa.shellSync('php --version');\n    } catch (err) {\n      console.error('Error: php cli required. ', err.message);\n      process.exit(1);\n    }\n\n    /** @type {Set<number>} */\n    this.portsUsed = new Set();\n    this.serverState = serverStates.STOPPED;\n    this.inProgressRequests = 0;\n    this.totalRequests = 0;\n    this.completedRequests = 0;\n    this.config = Object.assign({}, userConfig);\n    const isValid = validateSchemaAndAssignDefaults(this.config);\n    if (!isValid) {\n      const { errors } = validateSchemaAndAssignDefaults;\n      const msgs = [\n        'Error: Please check config passed into TwigRenderer.',\n        formatSchemaErrors(errors),\n      ].join('\\n');\n      console.error(msgs);\n      if (process.env.NODE_ENV === 'testing') {\n        process.exitCode = 1;\n      } else {\n        process.exit(1);\n      }\n      throw new Error(msgs);\n    }\n\n    if (this.config.relativeFrom) {\n      if (!fs.existsSync(this.config.relativeFrom)) {\n        const msg = `Uh oh, that file path does not exist: ${this.config.relativeFrom}`;\n        console.error(msg);\n        process.exitCode = 1;\n        throw new Error(msg);\n      }\n      this.config.relativeFrom = path.resolve(\n        process.cwd(),\n        this.config.relativeFrom,\n      );\n    } else {\n      this.config.relativeFrom = process.cwd();\n    }\n\n    if (this.config.alterTwigEnv) {\n      this.config.alterTwigEnv = this.config.alterTwigEnv.map((item) => {\n        const isAbsolute = path.isAbsolute(item.file);\n        return {\n          file: isAbsolute\n            ? item.file\n            : path.resolve(this.config.relativeFrom, item.file),\n          functions: item.functions,\n        };\n      });\n    }\n\n    this.config = TwigRenderer.processPaths(this.config);\n    // Writing this so `server--sync.php` can use\n    fs.writeFileSync(\n      path.join(__dirname, 'shared-config.json'),\n      JSON.stringify(this.config, null, '  '),\n    );\n  }\n\n  /**\n   * @param {object} config - this.config\n   * @returns {object} - config with checked and modified paths\n   */\n  static processPaths(config) {\n    function checkPaths(paths, { relativeFrom, recursive = false }) {\n      const thePaths = paths.map((thePath) => {\n        const fullPath = path.resolve(relativeFrom, thePath);\n        const relPath = path.relative(relativeFrom, fullPath);\n        if (!fs.existsSync(fullPath)) {\n          const msg = `This file path does not exist, but was used in config: ${thePath}`;\n          console.error(msg);\n          process.exitCode = 1;\n          throw new Error(msg);\n        }\n        return recursive ? getAllFolders(fullPath, relativeFrom) : relPath;\n      });\n      // Flattening arrays in case `recursive` was set\n      return [].concat(...thePaths);\n    }\n\n    const processedConfig = Object.assign({}, config);\n    const { relativeFrom } = processedConfig;\n    let { roots, namespaces } = processedConfig.src;\n\n    roots = checkPaths(roots, { relativeFrom });\n    if (namespaces) {\n      namespaces = namespaces.map(namespace => ({\n        id: namespace.id,\n        paths: checkPaths(namespace.paths, {\n          relativeFrom,\n          recursive: namespace.recursive,\n        }),\n      }));\n    }\n\n    processedConfig.relativeFrom = relativeFrom;\n    processedConfig.src.roots = roots;\n    if (namespaces) {\n      processedConfig.src.namespaces = namespaces;\n    }\n\n    return processedConfig;\n  }\n\n  /**\n   * Convert Legacy Namespaces Config\n   * The old format was an object with the keys being the namespace id and the value the config;\n   * the new format is an array of objects that are the exact same config,\n   * but the namespace id is the `id` property in the object.\n   * @param {object} namespaces - Namespaces config\n   * @return {object[]} - Format needed by `config.src.namespaces` (see `config.schema.json`)\n   */\n  static convertLegacyNamespacesConfig(namespaces) {\n    return Object.keys(namespaces).map((id) => {\n      const value = namespaces[id];\n      return Object.assign({ id }, value);\n    });\n  }\n\n  async getOpenPort() {\n    let portSelected = await getPort({\n      host: '127.0.0.1', // helps ensure the host being checked matches the PHP server being spun up\n    });\n\n    /* eslint-disable no-await-in-loop */\n    // pick another port if the one selected has already been taken\n    while (this.portsUsed.has(portSelected)) {\n      portSelected = await getPort({\n        host: '127.0.0.1', // helps ensure the host being checked matches the PHP server being spun up\n      });\n    }\n    /* eslint-enable no-await-in-loop */\n\n    // remember which ports have been assigned to avoid giving out the same port twice\n    this.portsUsed.add(portSelected);\n\n    return portSelected;\n  }\n\n  async init() {\n    if (this.serverState === serverStates.STARTING) {\n      // console.log('No need to re-init');\n      return this.serverState;\n    }\n\n    // try to handle situation when stopping the current instance but another request comes through\n    if (this.serverState === serverStates.STOPPING) {\n      // console.log('Server currently stopping -- trying to restart.');\n      this.serverState = serverStates.READY;\n      return this.serverState;\n    }\n\n    if (this.config.verbose) {\n      // console.log('Initializing PHP Server...');\n    }\n    this.serverState = serverStates.STARTING;\n\n    this.phpServerPort = await this.getOpenPort();\n    this.phpServerUrl = `http://127.0.0.1:${this.phpServerPort}`;\n\n    // @todo Pass config to PHP server a better way than writing JSON file, then reading in PHP\n    const sharedConfigPath = path.join(\n      __dirname,\n      `shared-config--${this.phpServerPort}.json`,\n    );\n    await fs.writeFile(\n      sharedConfigPath,\n      JSON.stringify(this.config, null, '  '),\n    );\n\n    const phpMemoryLimit = '4048M'; // @todo make user configurable\n    const params = [\n      '-d',\n      `memory_limit=${phpMemoryLimit}`,\n      path.join(__dirname, 'server--async.php'),\n      this.phpServerPort,\n      sharedConfigPath,\n    ];\n\n    this.phpServer = execa('php', params, {\n      cleanup: true,\n      detached: false,\n    });\n\n    // the PHP close event appears to happen first, THEN the exit event\n    this.phpServer.on('close', async () => {\n      // console.log(`Server ${this.phpServerPort} event: 'close'`);\n      this.serverState = serverStates.STOPPING;\n    });\n\n    this.phpServer.on('exit', async () => {\n      // console.log(`Server ${this.phpServerPort} event: 'exit'`);\n      await fs.unlink(sharedConfigPath);\n      this.serverState = serverStates.STOPPED;\n    });\n\n    this.phpServer.on('disconnect', () => {\n      // console.log(`Server ${this.phpServerPort} event: 'disconnect'`);\n    });\n\n    this.phpServer.on('error', () => {\n      // console.log(`Server ${this.phpServerPort} event: 'error'`);\n    });\n\n    // @todo wrap this in config for seeing it besides `verbose` - too noisy\n    this.phpServer.stdout.pipe(process.stdout);\n    this.phpServer.stderr.pipe(process.stderr);\n\n    if (this.config.verbose) {\n      // console.log(`TwigRender js init complete. PHP server started on port ${port}`);\n    }\n    await this.checkServerWhileStarting();\n    return this.serverState;\n  }\n\n  stop() {\n    // console.log(`stopping server with port ${this.phpServerPort}`);\n    this.serverState = serverStates.STOPPED;\n    this.phpServer.kill();\n    // â†“ not 100% sure if we need this w/ execa; other exec examples seem to do this for cleanup\n    this.phpServer.removeAllListeners();\n  }\n\n  async closeServer() {\n    // console.log('checking if we can stop the server...');\n    if (this.config.keepAlive === false) {\n      if (\n        this.completedRequests === this.totalRequests\n        && this.inProgressRequests === 0\n        && (this.serverState !== serverStates.STOPPING\n          || this.serverState !== serverStates.STOPPED)\n      ) {\n        this.stop();\n      } else {\n        setTimeout(() => {\n          if (\n            this.completedRequests === this.totalRequests\n            && this.inProgressRequests === 0\n          ) {\n            this.stop();\n          }\n        }, 300);\n      }\n    }\n  }\n\n  /**\n   * Is PHP sever ready to render?\n   * @returns {boolean} - is ready\n   */\n  async checkIfServerIsReady() {\n    if (this.config.verbose) {\n      // console.log(`Checking Server ${this.phpServerPort} was ${this.serverState}`);\n    }\n    try {\n      const res = await fetch(this.phpServerUrl);\n      const { ok } = res;\n      if (ok) {\n        this.serverState = serverStates.READY;\n      }\n      if (this.config.verbose) {\n        // console.log(`Server ${this.phpServerPort} is ${this.serverState}`);\n      }\n      return ok;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  async checkServerWhileStarting() {\n    while (this.serverState === serverStates.STARTING) {\n      // console.log(`checkServerWhileStarting: ${this.serverState}`);\n      await this.checkIfServerIsReady();\n      await sleep(100);\n    }\n    return this.serverState;\n  }\n\n  getServerState() {\n    return this.serverState;\n  }\n\n  /**\n   * Render Twig Template\n   * @param {string} template - Template path\n   * @param {object} data - Data to pass to template\n   * @returns {Promise<{ok: boolean, html: string, message: string}>} - Render results\n   */\n  async render(template, data = {}) {\n    const result = await this.request('renderFile', {\n      template,\n      data,\n    });\n    this.closeServer(); // try to cleanup the current server instance before returning results\n    return result;\n  }\n\n  /**\n   * Render Twig String\n   * @param {string} template - inlined Twig template\n   * @param {object} data - Data to pass to template\n   * @returns {Promise<{ok: boolean, html: string, message: string}>}  - Render results\n   */\n  async renderString(template, data = {}) {\n    const result = await this.request('renderString', {\n      template,\n      data,\n    });\n    this.closeServer(); // try to cleanup the current server instance before returning results\n    return result;\n  }\n\n  async getMeta() {\n    return this.request('meta');\n  }\n\n  async request(type, body = {}) {\n    this.totalRequests += 1;\n    if (this.serverState === serverStates.STOPPED) {\n      await this.init();\n    }\n\n    while (this.serverState !== serverStates.READY) {\n      await sleep(250);\n    }\n\n    while (this.inProgressRequests > this.config.maxConcurrency) {\n      await sleep(250);\n    }\n\n    if (this.config.verbose) {\n      console.log(\n        `About to render & server on port ${this.phpServerPort} is ${this.serverState}`,\n      );\n    }\n\n    const attempts = 3;\n    let attempt = 0;\n    let results;\n\n    while (attempt < attempts) {\n      try {\n        this.inProgressRequests += 1;\n        const requestUrl = `${this.phpServerUrl}?${qs.stringify({\n          type,\n        })}`;\n\n        // @todo Fail if no response after X seconds\n        const res = await fetch(requestUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n\n        const { status, headers, ok } = res;\n        const contentType = headers.get('Content-Type');\n        const warning = headers.get('Warning');\n\n        if (contentType === 'application/json') {\n          results = await res.json();\n        } else {\n          results = {\n            ok,\n            message: warning,\n            html: await res.text(),\n          };\n        }\n        this.inProgressRequests -= 1;\n        this.completedRequests += 1;\n\n        if (this.config.verbose) {\n          // console.log('vvvvvvvvvvvvvvv');\n          console.log(\n            `Render request received: Ok: ${\n              ok ? 'true' : 'false'\n            }, Status Code: ${status}, type: ${type}. ${\n              body.template ? `template: ${body.template}` : ''\n            }`,\n          );\n          if (warning) {\n            console.warn('Warning: ', warning);\n          }\n          // console.log(results);\n          // console.log(`End: ${templatePath}`);\n          // console.log('^^^^^^^^^^^^^^^^');\n          // console.log();\n        }\n        break;\n      } catch (e) {\n        results = {\n          ok: false,\n          message: e.message,\n        };\n        attempt += 1;\n        this.inProgressRequests -= 1;\n      }\n    }\n    return results;\n  }\n}\n\nexport default TwigRenderer;\n"],"names":["formatSchemaErrors","errors","length","msgs","map","e","keyword","dataPath","message","params","additionalProperty","allowedValues","join","error","isDir","thePath","fs","statSync","isDirectory","getAllSubFolders","dir","readdirSync","reduce","files","file","name","getAllFolders","relativeFrom","console","folders","folder","relative","ajv","Ajv","useDefaults","validateSchemaAndAssignDefaults","compile","configSchema","serverStates","Object","freeze","STOPPED","STARTING","READY","STOPPING","TwigRenderer","constructor","userConfig","execa","shellSync","err","process","exit","portsUsed","Set","serverState","inProgressRequests","totalRequests","completedRequests","config","assign","isValid","env","NODE_ENV","exitCode","Error","existsSync","msg","path","resolve","cwd","alterTwigEnv","item","isAbsolute","functions","processPaths","writeFileSync","__dirname","JSON","stringify","checkPaths","paths","recursive","thePaths","fullPath","relPath","concat","processedConfig","roots","namespaces","src","namespace","id","convertLegacyNamespacesConfig","keys","value","getOpenPort","portSelected","getPort","host","has","add","init","verbose","phpServerPort","phpServerUrl","sharedConfigPath","writeFile","phpMemoryLimit","phpServer","cleanup","detached","on","unlink","stdout","pipe","stderr","checkServerWhileStarting","stop","kill","removeAllListeners","closeServer","keepAlive","setTimeout","checkIfServerIsReady","res","fetch","ok","sleep","getServerState","render","template","data","result","request","renderString","getMeta","type","body","maxConcurrency","log","attempts","attempt","results","requestUrl","qs","method","headers","status","contentType","get","warning","json","html","text","warn"],"mappings":"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"}